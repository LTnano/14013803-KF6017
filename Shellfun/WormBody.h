// 14013803 - KF6017 Software Architecture for Games

#pragma once
#include "WormSegment.h"

// Wormbody moves and is handled by the Wormhead
// WormBody class inherits from WormSegment and GameObject
class WormBody : public WormSegment
{
private:
	bool hasArmour;  // Body Armoured bool
	AngledRectangle2D spriteBox;  // Sprite hitbox
public:
	// Getter for hitbox
	IShape2D& GetShape();

	// Method to check if the body is armored
	bool isArmoured();  

	// Change armoured status
	void setArmour(bool armoured);

	// Initialise the body attributes
	void Initialise(Vector2D pos, ObjectManager* pObjMan);

	// Process collision and report it to head
	void ProcessCollision(GameObject* pOtherObj, Vector2D initialVel);

	// Called each frame, updates the body armour cooldown and hitbox parameters
	void Update(const double frictCoeff, float frameTime);  // Method to update the WormBody

	// Constructor and Destructor
	WormBody(); 
	~WormBody();
};
































































































































































































































































































































































































// the body is round https://www.youtube.com/watch?v=JyOuM-xVvOI